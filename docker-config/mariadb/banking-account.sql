-- MySQL Script generated by MySQL Workbench
-- Thu Sep  9 01:25:25 2021
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema banking_account
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `banking_account` ;

-- -----------------------------------------------------
-- Schema banking_account
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `banking_account` DEFAULT CHARACTER SET utf8 ;
USE `banking_account` ;

-- -----------------------------------------------------
-- Table `banking_account`.`user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `banking_account`.`user` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `cpf` CHAR(14) NOT NULL,
  `birthdate` DATE NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `cpf_UNIQUE` (`cpf` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `banking_account`.`user_account`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `banking_account`.`user_account` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `user_id` INT NOT NULL,
  `balance` DECIMAL(10,2) NOT NULL,
  `type` ENUM('C', 'S') NOT NULL COMMENT 'C = Checking Account (Conta Corrente); S = Savings Account (Conta Poupança)',
  PRIMARY KEY (`id`),
  INDEX `fk_account_user_idx` (`user_id` ASC) VISIBLE,
  CONSTRAINT `fk_account_user`
    FOREIGN KEY (`user_id`)
    REFERENCES `banking_account`.`user` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `banking_account`.`user_account_transaction`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `banking_account`.`user_account_transaction` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `account_id` INT NOT NULL,
  `operation` ENUM('W', 'D') NOT NULL COMMENT 'W = Withdraw (Saque) ; D = Deposit (Depósito)',
  `amount` DECIMAL(10,2) NOT NULL,
  `banknotes` TEXT NULL DEFAULT NULL,
  `created_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`),
  INDEX `fk_account_statement_account1_idx` (`account_id` ASC) VISIBLE,
  CONSTRAINT `fk_account_statement_account1`
    FOREIGN KEY (`account_id`)
    REFERENCES `banking_account`.`user_account` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

USE `banking_account`;

DELIMITER $$
USE `banking_account`$$
CREATE DEFINER = CURRENT_USER TRIGGER `banking_account`.`user_account_AFTER_INSERT` AFTER INSERT ON `user_account` FOR EACH ROW
BEGIN
	INSERT INTO `user_account_transaction` (`id`, `account_id`, `operation`, `amount`) VALUES (NULL, NEW.id, 'D', NEW.balance);
END$$


DELIMITER ;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

-- -----------------------------------------------------
-- Data for table `banking_account`.`user`
-- -----------------------------------------------------
START TRANSACTION;
USE `banking_account`;
INSERT INTO `banking_account`.`user` (`id`, `name`, `cpf`, `birthdate`) VALUES (1, 'Roberto da Silva', '774.493.215-30', '1992-11-05');
INSERT INTO `banking_account`.`user` (`id`, `name`, `cpf`, `birthdate`) VALUES (2, 'Marcela Pereira', '606.372.862-78', '1975-05-15');
INSERT INTO `banking_account`.`user` (`id`, `name`, `cpf`, `birthdate`) VALUES (3, 'Maria de Lurdes', '839.477.315-07', '1988-02-25');
INSERT INTO `banking_account`.`user` (`id`, `name`, `cpf`, `birthdate`) VALUES (4, 'Thiago Barbosa', '543.907.813-40', '2000-01-01');

COMMIT;


-- -----------------------------------------------------
-- Data for table `banking_account`.`user_account`
-- -----------------------------------------------------
START TRANSACTION;
USE `banking_account`;
INSERT INTO `banking_account`.`user_account` (`id`, `user_id`, `balance`, `type`) VALUES (1, 1, 200, 'C');
INSERT INTO `banking_account`.`user_account` (`id`, `user_id`, `balance`, `type`) VALUES (2, 2, 900, 'S');
INSERT INTO `banking_account`.`user_account` (`id`, `user_id`, `balance`, `type`) VALUES (3, 3, 60, 'C');
INSERT INTO `banking_account`.`user_account` (`id`, `user_id`, `balance`, `type`) VALUES (4, 4, 2000, 'S');

COMMIT;

